{"version":3,"file":"Chat-HKqjT_fV.js","sources":["../../../src/views/admin/Chat.vue"],"sourcesContent":["<style>\r\n.demo-split {\r\n    height: 50px;\r\n    /* border: 1px solid #dcdee2; */\r\n}\r\n\r\n.demo-split-pane {\r\n    padding: 10px;\r\n}\r\n\r\n.ivu-table-sort {\r\n    width: 18px !important;\r\n}\r\n\r\n.ivu-page-options-sizer {\r\n    width: 100px;\r\n}\r\n</style>\r\n<template>\r\n    <div v-if=\"haveRule\">\r\n        <Space direction=\"vertical\" class=\"demo-split\">\r\n            <Space wrap class=\"demo-split-pane\">\r\n                <Icon type=\"md-add-circle\" size=\"24\" color=\"#2db7f5\" title=\"add\" @click=\"saveChat(0, 194)\" v-if=\"isSubstring(194, rules)\"/>\r\n            </Space>\r\n        </Space>\r\n        <Modal v-model=\"modalSaveChat\" ref=\"refTaskFlowModal\" title=\"saveChat\" :loading=\"loading\"\r\n            @on-ok=\"AsyncSaveChat('formValidate')\" @on-cancel=\"cancelModel('formValidate')\" loading=\"true\"\r\n            lock-scroll=\"true\" closable=\"false\" :scrollable=\"false\" v-if=\"formValidate\">\r\n            <Form ref=\"formValidate\" :model=\"formValidate\" :rules=\"ruleValidate\" :label-width=\"140\">\r\n                <FormItem label=\"chat_id\" prop=\"chat_id\">\r\n                    <Input v-model=\"formValidate.chat_id\" placeholder=\"Enter something...\"></Input>\r\n                </FormItem>\r\n                <FormItem label=\"detail\">\r\n                    <Input v-model=\"formValidate.detail\" placeholder=\"Enter something...\"></Input>\r\n                </FormItem>\r\n                <Input type=\"hidden\" v-model=\"formValidateID\"></Input>\r\n            </Form>\r\n        </Modal>\r\n        <Table border max-height=\"700\" :columns=\"columns\" :data=\"data\" size=\"small\" style=\"margin: 10px;\">\r\n            <template #action=\"{ row, index }\">\r\n                <Icon type=\"ios-create\" size=\"24\" color=\"#47cb89\" title=\"edit\" @click=\"saveChat(row.id, 256)\" v-if=\"isSubstring(256, rules)\"/>\r\n                <Icon type=\"ios-trash\" size=\"24\" color=\"red\" title=\"del\" @click=\"clickDelChat(row.id, 195)\" v-if=\"isSubstring(195, rules)\"/>\r\n            </template>\r\n        </Table>\r\n    </div>\r\n    <div v-else>\r\n        <NoAuth />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n\r\n            // 是否有权限\r\n            haveRule: true,\r\n\r\n            // 是否是管理员\r\n            ISAdmin: false,\r\n\r\n            // 权限 是管理员 则显示未空  不是管理员 则获取权限数据\r\n            rules: '',\r\n\r\n            // table\r\n            columns: [\r\n                {\r\n                    title: 'ID',\r\n                    key: 'id',\r\n                    width: 60,\r\n                    sortable: true,\r\n                    align: 'center'\r\n                },\r\n                {\r\n                    title: 'chat_id',\r\n                    key: 'chat_id',\r\n                    sortable: true,\r\n                    align: 'center'\r\n                },\r\n                {\r\n                    title: 'detail',\r\n                    key: 'detail',\r\n                    align: 'center'\r\n                },\r\n                {\r\n                    title: 'Action',\r\n                    width: 110,\r\n                    slot: 'action',\r\n                    align: 'center',\r\n                }\r\n            ],\r\n            // table data\r\n            data: [],\r\n\r\n            // model\r\n            loading: true,\r\n            formValidateID: 0,\r\n            formValidate: {},\r\n            modalSaveChat: false,\r\n            modelType: 'add',\r\n\r\n            // validate\r\n            ruleValidate: {\r\n                chat_id: [\r\n                    { required: true, message: 'The chat_id cannot be empty', trigger: 'blur' }\r\n                ]\r\n            }\r\n\r\n        }\r\n    },\r\n    created() {\r\n\r\n\r\n        // 获取是否是管理员权限\r\n        let isAdmin = JSON.parse(sessionStorage.getItem('userinfo'))['isAdmin'];\r\n        this.ISAdmin = isAdmin;\r\n\r\n        if (isAdmin == true) {\r\n            let chat = JSON.parse(sessionStorage.getItem('chat'))\r\n            if (chat) {\r\n                this.data = chat;\r\n            } else {\r\n                this.getChat();\r\n            }\r\n        } else {\r\n            // // 获取当前路由的参数menu_id \r\n            let menu_id = this.$router.currentRoute._value.query.menu_id;\r\n            this.checkAuth(menu_id);\r\n\r\n            // 判断是否有当前用户的规则数据  rules\r\n            let rules = sessionStorage.getItem('rules');\r\n            if (rules) {\r\n                this.rules = rules;\r\n            } else {\r\n                // 获取用户的规则数据\r\n                this.getUserToRules();\r\n            }\r\n        }\r\n\r\n    },\r\n    methods: {\r\n        // 来判断一个当前点击的菜单按钮是否存在于当前用户的规则里\r\n        isSubstring(menu_id, rules) {\r\n            if (this.ISAdmin == true) {\r\n                return true;\r\n            } else {\r\n                // 将 rules 字符串按逗号分隔为数组\r\n                let rulesArray = rules.split(',').map(item => parseInt(item.trim()));\r\n\r\n                // 检查 menu_id 是否包含在 rulesArray 中\r\n                return rulesArray.includes(parseInt(menu_id));\r\n            }\r\n        },\r\n        // 获取用户的规则数据rules\r\n        async getUserToRules() {\r\n            let that = this;\r\n            let user_id = JSON.parse(sessionStorage.getItem('userinfo'))['user_id'];\r\n            await that.$api.Admin.getUserToRules({ user_id: user_id }).then(function (response) {\r\n                if (response.data.code == 200) {\r\n                    that.rules = response.data.data;\r\n                    sessionStorage.setItem('rules', response.data.data)\r\n                }\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        },\r\n        // 查询当前窗口是否有权限\r\n        async checkAuth(menu_id) {\r\n            let that = this;\r\n            let userId = JSON.parse(sessionStorage.getItem('userinfo'))['user_id']\r\n            await that.$api.Admin.checkAuth({ id: menu_id, user_id: userId }).then(function (response) {\r\n                if (response.data.code == 200) {\r\n                    console.log(response.data.msg);\r\n                    that.haveRule = true;\r\n                    that.getChat();\r\n                } else {\r\n                    console.log(response.data.msg);\r\n                    that.haveRule = false;\r\n                }\r\n            }).catch(function (error) {\r\n                console.log(error)\r\n            })\r\n        },\r\n        // 获取讨论组\r\n        async getChat() {\r\n            let that = this;\r\n            await that.$api.Chat.index().then(function (response) {\r\n                if (response.data.code == 200) {\r\n                    that.data = response.data.data;\r\n                    sessionStorage.setItem('chat', JSON.stringify(response.data.data))\r\n                } else {\r\n                    console.log(response.data.msg);\r\n                }\r\n            }).catch(function (err) {\r\n                that.$Message.error('Network error, request failed');\r\n            });\r\n        },\r\n        // add / read Chat\r\n        async saveChat(id, menu_auth_id) {\r\n            let that = this;\r\n\r\n            let user_id = JSON.parse(sessionStorage.getItem('userinfo'))['user_id'];\r\n            if (that.ISAdmin == false) {\r\n                await that.$api.Admin.checkIsAuthToButton({ user_id: user_id, menu_auth_id: menu_auth_id }).then(function (response) {\r\n                    if (response.data.code == 0) {\r\n                        that.$Message.error(response.data.msg);\r\n                    } else {\r\n                        that.modalSaveChat = true;\r\n\r\n                        // read\r\n                        if (id > 0) {\r\n                            that.modelType = 'read';\r\n                            that.getChatToId(id)\r\n                        } else {\r\n                            that.formValidateID = 0;\r\n                            that.modelType = 'add';\r\n                        }\r\n                    }\r\n                }).catch(function (error) {\r\n                    that.$Message.error('Network error, request failed');\r\n                    console.log(error);\r\n                });\r\n            } else {\r\n                that.modalSaveChat = true;\r\n\r\n                // read\r\n                if (id > 0) {\r\n                    that.modelType = 'read';\r\n                    that.getChatToId(id)\r\n                } else {\r\n                    that.formValidateID = 0;\r\n                    that.modelType = 'add';\r\n                }\r\n            }\r\n\r\n        },\r\n        // 查询当前的讨论组信息\r\n        async getChatToId(id) {\r\n            let that = this;\r\n            await that.$api.Chat.read(id).then(function (response) {\r\n                if (response.data.code == 200) {\r\n                    that.formValidate = response.data.data;\r\n                    that.formValidateID = id;\r\n                } else {\r\n                    that.$Message.error(response.data.msg);\r\n                }\r\n            }).catch(function (err) {\r\n                that.$Message.error('Network error, request failed');\r\n            });\r\n        },\r\n        // 点击删除管理员\r\n        async clickDelChat(id, menu_auth_id) {\r\n            let that = this;\r\n            let user_id = JSON.parse(sessionStorage.getItem('userinfo'))['user_id'];\r\n            if (that.ISAdmin == false) {\r\n                await that.$api.Admin.checkIsAuthToButton({ user_id: user_id, menu_auth_id: menu_auth_id }).then(function (response) {\r\n                    if (response.data.code == 0) {\r\n                        that.$Message.error(response.data.msg);\r\n                    } else {\r\n                        that.delChat(id)\r\n                    }\r\n                }).catch(function (error) {\r\n                    that.$Message.error('Network error, request failed');\r\n                    console.log(error);\r\n                });\r\n            } else {\r\n                that.delChat(id)\r\n            }\r\n\r\n        },\r\n        // 删除管理员\r\n        async delChat(id) {\r\n            let that = this;\r\n            await that.$Modal.confirm({\r\n                title: 'Del',\r\n                content: 'Are you sure you want to delete it?',\r\n                onOk: function () {\r\n\r\n                    that.$api.Chat.delete(id).then(function (response) {\r\n\r\n                        that.$Message.success(response.data.msg);\r\n\r\n                        if (response.data.code == 200) {\r\n                            that.getChat()\r\n                        }\r\n\r\n                    }).catch(function (err) {\r\n                        that.$Message.error('Network error, request failed');\r\n                    });\r\n                }\r\n            })\r\n        },\r\n        // 提交数据\r\n        async saveChatData(formData) {\r\n            let that = this;\r\n            let formValidateID = that.formValidateID;\r\n            if (formValidateID > 0) {\r\n                // edit\r\n                await that.$api.Chat.update(formValidateID, formData).then(function (response) {\r\n\r\n                    if (response.data.code == 200) {\r\n\r\n                        that.$Message.success(response.data.msg);\r\n\r\n                        setTimeout(() => {\r\n\r\n                            that.formValidateID = 0;\r\n                            that.formValidate = {};\r\n                            that.$refs['formValidate'].resetFields();\r\n\r\n                            that.getChat();\r\n\r\n                        }, 2000)\r\n                    } else {\r\n                        that.$Message.error(response.data.msg);\r\n                        that.$refs['formValidate'].resetFields();\r\n                    }\r\n\r\n                }).catch(function (err) {\r\n                    that.$Message.error('Network error, request failed');\r\n                });\r\n            } else {\r\n                // add\r\n                await that.$api.Chat.save(formData).then(function (response) {\r\n                    if (response.data.code == 200) {\r\n\r\n                        that.$Message.success(response.data.msg);\r\n\r\n                        setTimeout(() => {\r\n\r\n                            that.formValidate = {};\r\n                            that.$refs['formValidate'].resetFields();\r\n\r\n                            that.getChat();\r\n\r\n                        }, 1000)\r\n\r\n                    } else {\r\n                        that.$Message.error(response.data.msg);\r\n                        that.$refs['formValidate'].resetFields();\r\n\r\n                    }\r\n\r\n                }).catch(function (err) {\r\n                    that.$Message.error('Network error, request failed');\r\n                });\r\n            }\r\n        },\r\n        // 验证数据\r\n        AsyncSaveChat(name) {\r\n            let that = this;\r\n            that.$refs[name].validate((valid) => {\r\n                if (valid) {\r\n                    setTimeout(() => {\r\n\r\n                        that.modalSaveChat = false;\r\n\r\n                        // 提交数据\r\n                        that.saveChatData(that.formValidate)\r\n\r\n                    }, 1000)\r\n                } else {\r\n                    that.loading = false;\r\n                    setTimeout(() => {\r\n                        that.loading = true;\r\n                    }, 10);\r\n                }\r\n            })\r\n        },\r\n        // 关掉model\r\n        cancelModel(name) {\r\n            this.formValidate = {};\r\n            this.$refs[name].resetFields();\r\n        }\r\n    }\r\n}\r\n\r\n</script>"],"names":["_sfc_main","isAdmin","chat","menu_id","rules","item","that","user_id","response","error","userId","err","id","menu_auth_id","formData","formValidateID","name","valid","$data","_createElementBlock","_hoisted_1","_createVNode","_component_Space","$options","_createBlock","_component_Icon","_component_Modal","$event","_component_Form","_component_FormItem","_component_Input","_cache","_component_Table","_withCtx","row","index","_hoisted_2","_component_NoAuth"],"mappings":"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"}