{"version":3,"file":"Role-GBUvYMtu.js","sources":["../../../src/views/admin/Role.vue"],"sourcesContent":["<style>\r\n.demo-split {\r\n    height: 50px;\r\n    /* border: 1px solid #dcdee2; */\r\n}\r\n\r\n.demo-split-pane {\r\n    padding: 10px;\r\n}\r\n\r\n.custom-modal {\r\n    height: 700px;\r\n    /* 设置模态框的高度为 400px */\r\n    overflow-y: auto;\r\n    /* 当内容溢出时，垂直滚动 */\r\n    align-items: center;\r\n    justify-content: center;\r\n}\r\n\r\n.custom-modal::-webkit-scrollbar {\r\n    display: none;\r\n    /*隐藏滚动条*/\r\n}\r\n\r\n.ivu-modal-header {\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 999999;\r\n    background-color: #fff;\r\n}\r\n\r\n.ivu-modal-footer {\r\n    position: sticky;\r\n    bottom: 0;\r\n    z-index: 999999;\r\n    background-color: #fff;\r\n}\r\n</style>\r\n<template>\r\n    <div v-if=\"haveRule\">\r\n        <Space direction=\"vertical\" class=\"demo-split\">\r\n            <Space wrap class=\"demo-split-pane\">\r\n                <Icon type=\"md-add-circle\" size=\"24\" color=\"#2db7f5\" title=\"add\" @click=\"addAuthGroup(44)\" v-if=\"isSubstring(44, rules)\" />\r\n            </Space>\r\n        </Space>\r\n        <Modal v-model=\"modalAddAuthGroup\" ref=\"refTaskFlowModal\" title=\"addAuthGroup\" :loading=\"loading\"\r\n            @on-ok=\"AsyncSaveAuthGroup('formValidate')\" @on-cancel=\"cancelModel\" loading=\"true\" lock-scroll=\"true\"\r\n            closable=\"true\" :scrollable=\"false\" v-if=\"formValidate\" :class=\"'custom-modal'\">\r\n            <Form ref=\"formValidate\" :model=\"formValidate\" :rules=\"ruleValidate\" :label-width=\"100\">\r\n                <FormItem label=\"Title\" prop=\"title\">\r\n                    <Input v-model=\"formValidate.title\" placeholder=\"Enter something...\"></Input>\r\n                </FormItem>\r\n                <FormItem label=\"Status\">\r\n                    <Switch v-model=\"formValidate.status\" size=\"large\">\r\n                        <template #open>\r\n                            <span>On</span>\r\n                        </template>\r\n                        <template #close>\r\n                            <span>Off</span>\r\n                        </template>\r\n                    </Switch>\r\n                </FormItem>\r\n                <FormItem label=\"Rules\">\r\n                    <Tree :data=\"menuList\" ref=\"tree\" multiple show-checkbox @on-check-change=\"clickTree\"\r\n                        :check-strictly=\"true\" :check-directly=\"true\"></Tree>\r\n                </FormItem>\r\n                <Input type=\"hidden\" v-model=\"formValidateID\"></Input>\r\n            </Form>\r\n        </Modal>\r\n        <Table border stripe max-height=\"700\" ref=\"selection\" :columns=\"columns\" :data=\"data\" size=\"small\"\r\n            style=\"margin: 10px;\">\r\n            <template #title=\"{ row }\">\r\n                <strong>{{ row.title }}</strong>\r\n            </template>\r\n            <template #status=\"{ row }\">\r\n                <Switch :model-value=\"row.status\" size=\"small\" :before-change=\"(value) => clickChangeSwitch(row.id, row.status, 50)\"></Switch>\r\n            </template>\r\n            <template #action=\"{ row, index }\">\r\n                <Icon type=\"ios-create\" size=\"24\" color=\"#47cb89\" title=\"edit\" @click=\"editAuthGroup(row.id, 45)\" v-if=\"isSubstring(45, rules)\"/>\r\n                <Icon type=\"ios-trash\" size=\"24\" color=\"red\" title=\"del\" @click=\"clickDelAuthGroup(row.id, 46)\" v-if=\"isSubstring(46, rules)\"/>\r\n            </template>\r\n        </Table>\r\n    </div>\r\n    <div v-else>\r\n        <NoAuth />\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            // 是否有权限\r\n            haveRule: true,\r\n\r\n            // 是否是管理员\r\n            ISAdmin: false,\r\n\r\n            // 权限 是管理员 则显示未空  不是管理员 则获取权限数据\r\n            rules: '',\r\n\r\n            // model\r\n            loading: true,\r\n            modalAddAuthGroup: false,\r\n            formValidateID: 0,\r\n            formValidate: {\r\n                title: '',\r\n                status: false\r\n            },\r\n            ruleValidate: {\r\n                title: [\r\n                    { required: true, message: 'The title cannot be empty', trigger: 'blur' }\r\n                ]\r\n            },\r\n            menuList: [\r\n\r\n            ],\r\n\r\n            // table\r\n            columns: [\r\n                {\r\n                    title: 'ID',\r\n                    width: 60,\r\n                    key: 'id'\r\n                },\r\n                {\r\n                    title: 'Title',\r\n                    width: 250,\r\n                    slot: 'title'\r\n                },\r\n                {\r\n                    title: 'Status',\r\n                    slot: 'status',\r\n                    width: 76\r\n                },\r\n                {\r\n                    title: 'Rules',\r\n                    key: 'rules',\r\n                },\r\n                {\r\n                    title: 'CreateTime',\r\n                    key: 'create_time',\r\n                    width: 150\r\n                },\r\n                {\r\n                    title: 'UpdateTime',\r\n                    key: 'update_time',\r\n                    width: 150\r\n                },\r\n                {\r\n                    title: 'Action',\r\n                    slot: 'action',\r\n                    width: 110,\r\n                    align: 'center'\r\n                }\r\n            ],\r\n            // table data\r\n            data: [],\r\n        }\r\n    },\r\n    created() {\r\n        // 获取是否是管理员权限\r\n        let isAdmin = JSON.parse(sessionStorage.getItem('userinfo'))['isAdmin'];\r\n        this.ISAdmin = isAdmin;\r\n\r\n        if (isAdmin == true) {\r\n\r\n            let authGroup = sessionStorage.getItem('authGroup');\r\n\r\n            if (authGroup) {\r\n                this.data = JSON.parse(authGroup)\r\n            } else {\r\n                this.getAuthGroup();\r\n            }\r\n        } else {\r\n            // 获取当前路由的参数menu_id \r\n            let menu_id = this.$router.currentRoute._value.query.menu_id;\r\n            this.checkAuth(menu_id);\r\n\r\n            // 判断是否有当前用户的规则数据  rules\r\n            let rules = sessionStorage.getItem('rules');\r\n            if (rules) {\r\n                this.rules = rules;\r\n            } else {\r\n                // 获取用户的规则数据\r\n                this.getUserToRules();\r\n            }\r\n        }\r\n\r\n    },\r\n    methods: {\r\n\r\n        // 来判断一个当前点击的菜单按钮是否存在于当前用户的规则里\r\n        isSubstring(menu_id, rules) {\r\n            if (this.ISAdmin == true) {\r\n                return true;\r\n            } else {\r\n                // 将 rules 字符串按逗号分隔为数组\r\n                let rulesArray = rules.split(',').map(item => parseInt(item.trim()));\r\n\r\n                // 检查 menu_id 是否包含在 rulesArray 中\r\n                return rulesArray.includes(parseInt(menu_id));\r\n            }\r\n        },\r\n        // 获取用户的规则数据rules\r\n        async getUserToRules() {\r\n            let that = this;\r\n            let user_id = JSON.parse(sessionStorage.getItem('userinfo'))['user_id'];\r\n            await that.$api.Admin.getUserToRules({ user_id: user_id }).then(function (response) {\r\n                if (response.data.code == 200) {\r\n                    that.rules = response.data.data;\r\n                    sessionStorage.setItem('rules', response.data.data)\r\n                }\r\n            }).catch(function (error) {\r\n                console.log(error);\r\n            });\r\n        },\r\n\r\n        // 查询当前窗口是否有权限\r\n        async checkAuth(menu_id) {\r\n            let that = this;\r\n            let userId = JSON.parse(sessionStorage.getItem('userinfo'))['user_id']\r\n            await that.$api.Admin.checkAuth({ id: menu_id, user_id: userId }).then(function (response) {\r\n                if (response.data.code == 200) {\r\n                    that.haveRule = true;\r\n                    that.getAuthGroup();\r\n                } else {\r\n                    that.haveRule = false;\r\n                }\r\n            }).catch(function (error) {\r\n                console.log(error)\r\n            })\r\n        },\r\n\r\n        // 点击选中Rules\r\n        clickTree(arr, index) {\r\n            // 选中\r\n            if (index.checked === true) {\r\n                if (index.children) {\r\n                    for (let i = 0; i < index.children.length; i++) {\r\n                        // 判断三级菜单是否存在\r\n                        if (index.children[i].children) {\r\n                            for (let j = 0; j < index.children[i].children.length; j++) {\r\n                                index.children[i].children[j].checked = true;\r\n                                index.children[i].checked = true\r\n                            }\r\n                        } else {\r\n                            index.children[i].checked = true\r\n                        }\r\n\r\n                    }\r\n                }\r\n            } else {  // 取消选中\r\n                if (index.children) {\r\n                    for (let i = 0; i < index.children.length; i++) {\r\n                        // 判断三级菜单是否存在\r\n                        if (index.children[i].children) {\r\n                            for (let j = 0; j < index.children[i].children.length; j++) {\r\n                                index.children[i].children[j].checked = false;\r\n                                index.children[i].checked = false\r\n                            }\r\n                        } else {\r\n                            index.children[i].checked = false\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n        },\r\n        // 查询数据\r\n        async getAuthGroup() {\r\n            let that = this;\r\n            await that.$api.AuthGroup.index().then(function (response) {\r\n                if (response.data.code == 200) {\r\n\r\n                    sessionStorage.setItem('authGroup', JSON.stringify(response.data.data.data));\r\n                    sessionStorage.setItem('menuList', JSON.stringify(response.data.data.menu));\r\n\r\n                    that.data = JSON.parse(sessionStorage.getItem('authGroup'));\r\n                    that.menuList = JSON.parse(sessionStorage.getItem('menuList'));\r\n                } else {\r\n                    that.data = [];\r\n                }\r\n            }).catch(function (error) {\r\n                that.$Message.error('Network error, request failed');\r\n                console.log(error);\r\n            });\r\n        },\r\n        // 点击改变角色状态\r\n        clickChangeSwitch(id, is_status, menu_auth_id) {\r\n\r\n            return new Promise((resolve) => {\r\n                // 判断是否有权限\r\n                let that = this;\r\n                let user_id = JSON.parse(sessionStorage.getItem('userinfo'))['user_id'];\r\n                if (that.ISAdmin == false) {\r\n                    that.$api.Admin.checkIsAuthToButton({ user_id: user_id, menu_auth_id: menu_auth_id }).then(function (response) {\r\n                        if (response.data.code == 0) {\r\n                            \r\n                            that.$Message.error(response.data.msg);\r\n                            return false;\r\n\r\n                        } else {\r\n                            that.changeSwitch(id, is_status);\r\n                            resolve();\r\n                        }\r\n                    }).catch(function (error) {\r\n                        that.$Message.error('Network error, request failed');\r\n                        console.log(error);\r\n                    });\r\n\r\n                } else {\r\n                    that.changeSwitch(id, is_status);\r\n                    resolve();\r\n                }\r\n            });\r\n\r\n        },\r\n        // 保存改变角色状态\r\n        async changeSwitch(id, is_status){\r\n            let status = (is_status === true ? false : true);\r\n            let that = this;\r\n\r\n            await that.$api.AuthGroup.update(id, { status: status }).then(function (response) {\r\n\r\n                if (response.data.code == 200) {\r\n\r\n                    sessionStorage.removeItem('authGroup');\r\n\r\n                    that.getAuthGroup();\r\n\r\n                    that.$Message.success('status: ' + (is_status === true ? 'close' : 'open'));\r\n\r\n                } else {\r\n                    that.$Message.success('status Enable exception');\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                that.$Message.error('Network error, request failed');\r\n                console.log(error)\r\n            });\r\n        },\r\n        // add\r\n        async addAuthGroup(menu_auth_id) {\r\n            let that = this;\r\n\r\n            let user_id = JSON.parse(sessionStorage.getItem('userinfo'))['user_id'];\r\n            if (that.ISAdmin == false) {\r\n                await that.$api.Admin.checkIsAuthToButton({ user_id: user_id, menu_auth_id: menu_auth_id }).then(function (response) {\r\n                    if (response.data.code == 0) {\r\n                        that.$Message.error(response.data.msg);\r\n                    } else {\r\n                        that.modalAddAuthGroup = true;\r\n                        that.formValidateID = 0;\r\n\r\n                        let menuList = sessionStorage.getItem('menuList');\r\n\r\n                        if (menuList) {\r\n                            that.menuList = JSON.parse(menuList);\r\n                        }\r\n                    }\r\n                }).catch(function (error) {\r\n                    that.$Message.error('Network error, request failed');\r\n                    console.log(error);\r\n                });\r\n\r\n            } else {\r\n                that.modalAddAuthGroup = true;\r\n                that.formValidateID = 0;\r\n\r\n                let menuList = sessionStorage.getItem('menuList');\r\n\r\n                if (menuList) {\r\n                    that.menuList = JSON.parse(menuList);\r\n                }\r\n            }\r\n            \r\n        },\r\n        // edit\r\n        async editAuthGroup(id, menu_auth_id) {\r\n\r\n            var that = this;\r\n            let user_id = JSON.parse(sessionStorage.getItem('userinfo'))['user_id'];\r\n            if (that.ISAdmin == false) {\r\n                await that.$api.Admin.checkIsAuthToButton({ user_id: user_id, menu_auth_id: menu_auth_id }).then(function (response) {\r\n                    if (response.data.code == 0) {\r\n                        that.$Message.error(response.data.msg);\r\n                    } else {\r\n                        that.readAuthGroup(id);\r\n                    }\r\n                }).catch(function (error) {\r\n                    that.$Message.error('Network error, request failed');\r\n                    console.log(error);\r\n                });\r\n\r\n            } else {\r\n                that.readAuthGroup(id);\r\n            }\r\n            \r\n        },\r\n        // readAuthGroup\r\n        async readAuthGroup(id){\r\n            let that = this;\r\n            that.$Message.loading('拼命加载中...');\r\n            setTimeout(() => {\r\n                that.modalAddAuthGroup = true;\r\n            },1000)\r\n            \r\n            that.menuList = [];\r\n            \r\n            await that.$api.AuthGroup.read(id).then(function (response) {\r\n\r\n                if (response.data.code == 200) {\r\n\r\n                    // that.$Message.success(response.data.msg);\r\n\r\n                    that.formValidate = response.data.data.data;\r\n\r\n                    that.menuList = response.data.data.menu;\r\n\r\n                    that.formValidateID = id;\r\n                } else {\r\n                    that.$Message.success(response.data.msg);\r\n                }\r\n\r\n            }).catch(function (error) {\r\n                that.$Message.error('Network error, request failed');\r\n                console.log(error)\r\n            })\r\n        },\r\n        // click del\r\n        async clickDelAuthGroup(id, menu_auth_id) {\r\n\r\n            var that = this;\r\n            let user_id = JSON.parse(sessionStorage.getItem('userinfo'))['user_id'];\r\n            if (that.ISAdmin == false) {\r\n                await that.$api.Admin.checkIsAuthToButton({ user_id: user_id, menu_auth_id: menu_auth_id }).then(function (response) {\r\n                    if (response.data.code == 0) {\r\n                        that.$Message.error(response.data.msg);\r\n                    } else {\r\n                        that.delAuthGroup(id);\r\n                    }\r\n                }).catch(function (error) {\r\n                    that.$Message.error('Network error, request failed');\r\n                    console.log(error);\r\n                });\r\n\r\n            } else {\r\n                that.delAuthGroup(id);\r\n            }\r\n\r\n        },\r\n        // del\r\n        delAuthGroup(id) {\r\n            let that = this;\r\n            this.$Modal.confirm({\r\n                title: 'Del',\r\n                content: 'Are you sure you want to delete it?',\r\n                onOk: function () {\r\n\r\n                    that.$api.AuthGroup.delete(id).then(function (response) {\r\n\r\n                        if (response.data.code == 200) {\r\n                            that.$Message.success(response.data.msg);\r\n                            that.getAuthGroup();\r\n                        } else {\r\n                            that.$Message.error(response.data.msg);\r\n                        }\r\n\r\n                    }).catch(function (error) {\r\n                        that.$Message.error('Network error, request failed');\r\n                        console.log(error)\r\n                    });\r\n\r\n                }\r\n            })\r\n        },\r\n        // 提交数据\r\n        async AsyncSaveAuthGroup(name) {\r\n            let that = this;\r\n            // 验证MenuName\r\n            await this.$refs[name].validate((valid) => {\r\n                if (valid) {\r\n                    setTimeout(() => {\r\n                        // 获取被勾选的节点\r\n                        let res = this.$refs.tree.getCheckedAndIndeterminateNodes();\r\n                        // let res = this.$refs.tree.getCheckedNodes();\r\n                        let menuIds = [];\r\n                        for (let i = 0; i < res.length; i++) {\r\n                            menuIds.push(res[i].id)\r\n                        }\r\n\r\n                        if (res == '') {\r\n\r\n                            this.loading = false;\r\n                            setTimeout(() => {\r\n                                that.$Message.error('Rules Must be Check!');\r\n                                this.loading = true;\r\n                            }, 100);\r\n\r\n                            return;\r\n                        }\r\n\r\n                        menuIds.join(',');\r\n                        let params = {\r\n                            title: that.formValidate.title,\r\n                            status: that.formValidate.status,\r\n                            rules: menuIds\r\n                        };\r\n                        // formValidateID 0 新增\r\n                        if (that.formValidateID === 0) {\r\n\r\n                            that.$api.AuthGroup.save(params).then(function (response) {\r\n\r\n                                if (response.data.code == 200) {\r\n\r\n                                    that.$Message.success(response.data.msg);\r\n\r\n                                    that.modalAddAuthGroup = false;\r\n\r\n                                    that.formValidate = {\r\n                                        title: '',\r\n                                        status: false\r\n                                    };\r\n\r\n                                    that.getAuthGroup();\r\n\r\n                                } else {\r\n                                    that.$Message.success(response.data.msg);\r\n                                }\r\n\r\n                            }).catch(function (error) {\r\n                                that.$Message.error('Network error, request failed');\r\n                                console.log(error)\r\n                            })\r\n\r\n                        } else {\r\n                            // formValidateID <> 0 更新数据\r\n                            that.$api.AuthGroup.update(that.formValidateID, params).then(function (response) {\r\n\r\n                                if (response.data.code == 200) {\r\n\r\n                                    that.$Message.success(response.data.msg);\r\n\r\n                                    that.modalAddAuthGroup = false;\r\n\r\n                                    that.formValidate = {\r\n                                        title: '',\r\n                                        status: false\r\n                                    };\r\n\r\n                                    that.getAuthGroup();\r\n\r\n                                } else {\r\n                                    that.$Message.success(response.data.msg);\r\n                                }\r\n\r\n                            }).catch(function (error) {\r\n                                that.$Message.error('Network error, request failed');\r\n                                console.log(error)\r\n                            })\r\n                        }\r\n\r\n\r\n                    }, 1000)\r\n\r\n                    sessionStorage.removeItem('rules');\r\n                } else {\r\n                    this.loading = false;\r\n                    setTimeout(() => {\r\n                        this.loading = true;\r\n                    }, 10);\r\n                }\r\n            })\r\n        },\r\n        // 关掉model\r\n        cancelModel() {\r\n            this.formValidate = {\r\n                title: '',\r\n                status: false\r\n            };\r\n            // this.resetTreeSelection(this.menuList);\r\n            this.menuList = [];\r\n            this.$refs['formValidate'].resetFields();\r\n        }\r\n    }\r\n}\r\n\r\n</script>"],"names":["_sfc_main","isAdmin","authGroup","menu_id","rules","item","that","user_id","response","error","userId","arr","index","i","j","id","is_status","menu_auth_id","resolve","status","menuList","name","valid","res","menuIds","params","_hoisted_2","_createElementVNode","_hoisted_3","$data","_createElementBlock","_hoisted_1","_createVNode","_component_Space","$options","_createBlock","_component_Icon","_component_Modal","$event","_component_Form","_component_FormItem","_component_Input","_cache","_component_Switch","_component_Tree","_component_Table","_withCtx","row","_toDisplayString","value","_hoisted_4","_component_NoAuth"],"mappings":"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"}