import{aM as d,az as m,q as V,z as r,bs as o,o as f,p as h,bu as z,bk as x,F as D,aK as P,r as _,a_ as S,y as q}from"./_@vue-AcWbRQZ2.js";import{_ as C}from"../js2/index-A1W57FR6.js";import"./__vendor-oHGn7YgQ.js";const G={data(){return{haveRule:!0,ISAdmin:!1,rules:"",columns:[{title:"ID",width:80,key:"id",fixed:"left",sortable:!0,align:"center"},{title:"is_admin",key:"is_admin",slot:"is_admin",sortable:!0,width:150,align:"center"},{title:"authGroup",key:"auth_group_id",width:150,align:"center"},{title:"username",key:"username",slot:"username",width:150,align:"center"},{title:"fullname",key:"fullname",width:150,align:"center"},{title:"password",key:"password",width:150,align:"center"},{title:"sex",key:"sex",slot:"sex",width:150,align:"center"},{title:"phone",key:"phone",width:150,align:"center"},{title:"email",key:"email",width:150,align:"center"},{title:"login_times",key:"login_times",width:150,align:"center"},{title:"login_ip",key:"login_ip",width:150,align:"center"},{title:"last_login_ip",key:"last_login_ip",width:150,align:"center"},{title:"login_time",key:"login_time",width:150,align:"center"},{title:"last_login_time",key:"last_login_time",width:150,align:"center"},{title:"status",key:"status",slot:"status",width:150,align:"center"},{title:"CreateTime",key:"create_time",width:150,align:"center"},{title:"UpdateTime",key:"update_time",width:150,align:"center"},{title:"Action",slot:"action",width:140,align:"center",fixed:"right"}],data:[],total:0,pageSize:10,pageSizeOpts:10,page:1,loading:!0,formValidateID:0,formValidate:{},modalSaveAdmin:!1,authGroup:{},modelType:"add",is_admin_switch:!1,ruleValidate:{username:[{required:!0,message:"The username cannot be empty",trigger:"blur"}],fullname:[{required:!0,message:"The fullname cannot be empty",trigger:"blur"}],phone:[{required:!0,message:"The phone cannot be empty",trigger:"blur"}],password:[{required:!0,message:"The password cannot be empty",trigger:"blur"}],access_token:[{required:!0,message:"The access_token cannot be empty",trigger:"blur"}],email:[{required:!0,message:"The email cannot be empty",trigger:"blur"}],auth_group_id:[{required:!0,message:"The auth_group cannot be empty",trigger:"change",type:"number"}]}}},created(){let i=JSON.parse(sessionStorage.getItem("userinfo")).isAdmin;if(this.ISAdmin=i,i==!0){let e=JSON.parse(sessionStorage.getItem("admin"));e?(this.data=e.data,this.total=e.total,this.pageSize=e.per_page):this.getUser()}else{let e=this.$router.currentRoute._value.query.menu_id;this.checkAuth(e);let t=sessionStorage.getItem("rules");t?this.rules=t:this.getUserToRules()}},methods:{isSubstring(i,e){return this.ISAdmin==!0?!0:e.split(",").map(s=>parseInt(s.trim())).includes(parseInt(i))},async getUserToRules(){let i=this,e=JSON.parse(sessionStorage.getItem("userinfo")).user_id;await i.$api.Admin.getUserToRules({user_id:e}).then(function(t){t.data.code==200&&(i.rules=t.data.data,sessionStorage.setItem("rules",t.data.data))}).catch(function(t){console.log(t)})},async checkAuth(i){let e=this,t=JSON.parse(sessionStorage.getItem("userinfo")).user_id;await e.$api.Admin.checkAuth({id:i,user_id:t}).then(function(s){s.data.code==200?(console.log(s.data.msg),e.haveRule=!0,e.getUser()):(console.log(s.data.msg),e.haveRule=!1)}).catch(function(s){console.log(s)})},changeIsAdmin(i){i==!0?this.is_admin_switch=!0:this.is_admin_switch=!1},async getUser(){let i=this,e=i.page,t=i.pageSize;await i.$api.Admin.index({page:e,pageSize:t}).then(function(s){s.data.code==200?(i.data=s.data.data.data,i.total=s.data.data.total,i.pageSize=s.data.data.per_page,sessionStorage.setItem("admin",JSON.stringify(s.data.data))):s.data.code==210?(console.log(s),i.page=s.data.data.page>1?s.data.data.page-1:1,i.page==1?i.data=[]:i.getUser()):console.log(s.data.msg)}).catch(function(s){console.log(s)})},async saveAdmin(i,e){let t=this,s=JSON.parse(sessionStorage.getItem("userinfo")).user_id;if(t.ISAdmin==!1)await t.$api.Admin.checkIsAuthToButton({user_id:s,menu_auth_id:e}).then(function(a){if(a.data.code==0)t.$Message.error(a.data.msg);else{t.modalSaveAdmin=!0;let n=JSON.parse(sessionStorage.getItem("authGroup"));n?t.authGroup=n:t.getAuthGroup(),i>0?(t.modelType="read",t.getAdminToId(i)):(t.formValidateID=0,t.modelType="add")}}).catch(function(a){t.$Message.error("Network error, request failed"),console.log(a)});else{t.modalSaveAdmin=!0;let a=JSON.parse(sessionStorage.getItem("authGroup"));a?t.authGroup=a:t.getAuthGroup(),i>0?(t.modelType="read",t.getAdminToId(i)):(t.formValidateID=0,t.modelType="add")}},async getAuthGroup(){let i=this;await i.$api.AuthGroup.index().then(function(e){e.data.code==200&&(sessionStorage.setItem("authGroup",JSON.stringify(e.data.data.data)),i.authGroup=JSON.parse(sessionStorage.getItem("authGroup")))})},async getAdminToId(i){let e=this;await e.$api.Admin.read(i).then(function(t){t.data.code==200?(e.formValidate=t.data.data,t.data.data.is_admin==!0&&(e.is_admin_switch=!0),e.formValidateID=i):e.$Message.error(t.data.msg)}).catch(function(t){console.log(t)})},async clickDelAdmin(i,e){let t=this,s=JSON.parse(sessionStorage.getItem("userinfo")).user_id;t.ISAdmin==!1?await t.$api.Admin.checkIsAuthToButton({user_id:s,menu_auth_id:e}).then(function(a){a.data.code==0?t.$Message.error(a.data.msg):t.delAdmin(i)}).catch(function(a){t.$Message.error("Network error, request failed"),console.log(a)}):t.delAdmin(i)},async delAdmin(i){let e=this;await e.$Modal.confirm({title:"Del",content:"Are you sure you want to delete it?",onOk:function(){e.$api.Admin.delete(i).then(function(t){e.$Message.success(t.data.msg),t.data.code==200&&e.getUser()}).catch(function(t){e.$Message.error("Network error, request failed"),console.log(t)})}})},async saveAdminData(i){let e=this,t=e.formValidateID;t>0?await e.$api.Admin.update(t,i).then(function(s){s.data.code==200?(e.$Message.success(s.data.msg),setTimeout(()=>{e.formValidateID=0,e.formValidate={},e.$refs.formValidate.resetFields(),e.getUser()},2e3)):(e.$Message.error(s.data.msg),e.$refs.formValidate.resetFields())}).catch(function(s){e.$Message.error("Network error, request failed")}):await e.$api.Admin.save(i).then(function(s){s.data.code==200?(e.$Message.success(s.data.msg),setTimeout(()=>{e.formValidate={},e.$refs.formValidate.resetFields(),e.getUser()},1e3)):(e.$Message.error(s.data.msg),e.$refs.formValidate.resetFields())}).catch(function(s){e.$Message.error("Network error, request failed")})},AsyncSaveAuthGroup(i){let e=this;e.$refs[i].validate(t=>{t?setTimeout(()=>{e.modalSaveAdmin=!1,e.saveAdminData(e.formValidate)},1e3):(e.loading=!1,setTimeout(()=>{e.loading=!0},10))})},cancelModel(i){this.formValidate={},this.is_admin_switch=!1,this.$refs[i].resetFields()},changePage(i){var e=this;e.page=i,e.getUser()},nextPage(i){var e=this;e.page=i,e.getUser()},prevPage(i){var e=this;e.page=i,e.getUser()},pageSizeChange(i){var e=this;e.pageSize=i,e.page=1,e.getUser()},changeSwitchIsAdmin(i,e,t){let s=this,a=e!==!0,n=JSON.parse(sessionStorage.getItem("userinfo")).user_id;return s.formValidateID=i,new Promise(c=>{s.ISAdmin==!1?s.$api.Admin.checkIsAuthToButton({user_id:n,menu_auth_id:t}).then(function(u){if(u.data.code==0)return s.$Message.error(u.data.msg),!1;s.saveAdminIsAdmin(a),c()}).catch(function(u){s.$Message.error("Network error, request failed"),console.log(u)}):(s.saveAdminIsAdmin(a),c())})},async saveAdminIsAdmin(i){let e=this;await e.$api.Admin.saveAdminIsAdmin({id:e.formValidateID,is_admin:i}).then(function(t){t.data.code==200&&(e.$Message.success(t.data.msg),setTimeout(()=>{e.getUser()},1e3))}).catch(function(t){e.$Message.error("Network error, request failed")})},changeSwitchStatus(i,e,t){let s=e!==!0,a=this;a.formValidateID=i;let n=JSON.parse(sessionStorage.getItem("userinfo")).user_id;return new Promise(c=>{a.ISAdmin==!1?a.$api.Admin.checkIsAuthToButton({user_id:n,menu_auth_id:t}).then(function(u){if(u.data.code==0)return a.$Message.error(u.data.msg),!1;a.saveAdminStatus(s),c()}).catch(function(u){a.$Message.error("Network error, request failed"),console.log(u)}):(a.saveAdminStatus(s),c())})},async saveAdminStatus(i){let e=this;await e.$api.Admin.saveAdminStatus({id:e.formValidateID,status:i}).then(function(t){t.data.code==200&&(e.$Message.success(t.data.msg),setTimeout(()=>{e.getUser()},1e3))}).catch(function(t){e.$Message.error("Network error, request failed")})},async clickResetPassword(i,e){let t=this,s=JSON.parse(sessionStorage.getItem("userinfo")).user_id;t.ISAdmin==!1?await t.$api.Admin.checkIsAuthToButton({user_id:s,menu_auth_id:e}).then(function(a){a.data.code==0?t.$Message.error(a.data.msg):t.resetPassword(i)}).catch(function(a){t.$Message.error("Network error, request failed"),console.log(a)}):t.resetPassword(i)},async resetPassword(i){let e=this;await e.$Modal.confirm({title:"Del",content:"Are you sure you want to reset it password?",onOk:function(){e.$api.Admin.resetPassword({id:i}).then(function(t){t.data.code==200?(e.$Message.success(t.data.msg),e.getUser()):e.$Message.error(t.data.msg)}).catch(function(t){e.$Message.error("Network error, request failed")})}})}}},J={key:0},R=_("span",null,"On",-1),F=_("span",null,"Off",-1),B=_("span",null,"On",-1),E=_("span",null,"Off",-1),$={key:1};function K(i,e,t,s,a,n){const c=d("Icon"),u=d("Space"),A=d("Switch"),g=d("FormItem"),p=d("Input"),I=d("Option"),v=d("Select"),w=d("Radio"),b=d("RadioGroup"),O=d("Form"),T=d("Modal"),M=d("Table"),N=d("Page"),U=d("NoAuth");return a.haveRule?(m(),V("div",J,[r(u,{direction:"vertical",class:"demo-split"},{default:o(()=>[r(u,{wrap:"",class:"demo-split-pane"},{default:o(()=>[n.isSubstring(47,a.rules)?(m(),f(c,{key:0,type:"md-add-circle",size:"24",color:"#2db7f5",title:"add",onClick:e[0]||(e[0]=l=>n.saveAdmin(0,47))})):h("",!0)]),_:1})]),_:1}),a.formValidate?(m(),f(T,{key:0,modelValue:a.modalSaveAdmin,"onUpdate:modelValue":e[11]||(e[11]=l=>a.modalSaveAdmin=l),ref:"refTaskFlowModal",title:"saveAdmin",loading:a.loading,onOnOk:e[12]||(e[12]=l=>n.AsyncSaveAuthGroup("formValidate")),onOnCancel:e[13]||(e[13]=l=>n.cancelModel("formValidate")),"lock-scroll":"true",closable:"false",scrollable:!1},{default:o(()=>[r(O,{ref:"formValidate",model:a.formValidate,rules:a.ruleValidate,"label-width":140},{default:o(()=>[r(g,{label:"isAdmin"},{default:o(()=>[r(A,{modelValue:a.formValidate.is_admin,"onUpdate:modelValue":e[1]||(e[1]=l=>a.formValidate.is_admin=l),size:"large",onOnChange:n.changeIsAdmin},{open:o(()=>[R]),close:o(()=>[F]),_:1},8,["modelValue","onOnChange"])]),_:1}),r(g,{label:"username",prop:"username"},{default:o(()=>[r(p,{modelValue:a.formValidate.username,"onUpdate:modelValue":e[2]||(e[2]=l=>a.formValidate.username=l),placeholder:"Enter something..."},null,8,["modelValue"])]),_:1}),r(g,{label:"fullname",prop:"fullname"},{default:o(()=>[r(p,{modelValue:a.formValidate.fullname,"onUpdate:modelValue":e[3]||(e[3]=l=>a.formValidate.fullname=l),placeholder:"Enter something..."},null,8,["modelValue"])]),_:1}),r(g,{label:"phone",prop:"phone"},{default:o(()=>[r(p,{modelValue:a.formValidate.phone,"onUpdate:modelValue":e[4]||(e[4]=l=>a.formValidate.phone=l),placeholder:"Enter something..."},null,8,["modelValue"])]),_:1}),a.modelType=="add"?(m(),f(g,{key:0,label:"password",prop:"password"},{default:o(()=>[r(p,{modelValue:a.formValidate.password,"onUpdate:modelValue":e[5]||(e[5]=l=>a.formValidate.password=l),placeholder:"Enter something..."},null,8,["modelValue"])]),_:1})):h("",!0),r(g,{label:"email",prop:"email"},{default:o(()=>[r(p,{modelValue:a.formValidate.email,"onUpdate:modelValue":e[6]||(e[6]=l=>a.formValidate.email=l),placeholder:"Enter something..."},null,8,["modelValue"])]),_:1}),a.is_admin_switch?h("",!0):(m(),f(g,{key:1,label:"auth_group",prop:"auth_group_id"},{default:o(()=>[r(v,{modelValue:a.formValidate.auth_group_id,"onUpdate:modelValue":e[7]||(e[7]=l=>a.formValidate.auth_group_id=l)},{default:o(()=>[(m(!0),V(D,null,P(a.authGroup,l=>(m(),f(I,{value:l.id,key:l.id},{default:o(()=>[q(S(l.title),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue"])]),_:1})),r(g,{label:"sex",prop:"sex"},{default:o(()=>[r(b,{modelValue:a.formValidate.sex,"onUpdate:modelValue":e[8]||(e[8]=l=>a.formValidate.sex=l)},{default:o(()=>[r(w,{label:"男"}),r(w,{label:"女"})]),_:1},8,["modelValue"])]),_:1}),r(g,{label:"Status"},{default:o(()=>[r(A,{modelValue:a.formValidate.status,"onUpdate:modelValue":e[9]||(e[9]=l=>a.formValidate.status=l),size:"large"},{open:o(()=>[B]),close:o(()=>[E]),_:1},8,["modelValue"])]),_:1}),r(p,{type:"hidden",modelValue:a.formValidateID,"onUpdate:modelValue":e[10]||(e[10]=l=>a.formValidateID=l)},null,8,["modelValue"])]),_:1},8,["model","rules"])]),_:1},8,["modelValue","loading"])):h("",!0),r(M,{border:"","max-height":"700",columns:a.columns,data:a.data,size:"small",style:{margin:"10px"}},{username:o(({row:l})=>[_("strong",null,S(l.username),1)]),is_admin:o(({row:l})=>[r(A,{"model-value":l.is_admin,size:"small","before-change":y=>n.changeSwitchIsAdmin(l.id,l.is_admin,254)},null,8,["model-value","before-change"])]),sex:o(({row:l})=>[_("strong",null,S(l.sex),1)]),status:o(({row:l})=>[r(A,{"model-value":l.status,size:"small","before-change":y=>n.changeSwitchStatus(l.id,l.status,255)},null,8,["model-value","before-change"])]),action:o(({row:l,index:y})=>[n.isSubstring(253,a.rules)?(m(),f(c,{key:0,type:"ios-finger-print",size:"24",color:"#4e52cd",title:"resetPwd",onClick:k=>n.clickResetPassword(l.id,253)},null,8,["onClick"])):h("",!0),n.isSubstring(48,a.rules)?(m(),f(c,{key:1,type:"ios-create",size:"24",color:"#47cb89",title:"edit",onClick:k=>n.saveAdmin(l.id,48)},null,8,["onClick"])):h("",!0),n.isSubstring(49,a.rules)?(m(),f(c,{key:2,type:"ios-trash",size:"24",color:"red",title:"del",onClick:k=>n.clickDelAdmin(l.id,49)},null,8,["onClick"])):h("",!0)]),_:1},8,["columns","data"]),z(r(N,{total:a.total,"page-size":a.pageSize,onOnNext:n.nextPage,onOnPrev:n.prevPage,onOnChange:n.changePage,onOnPageSizeChange:n.pageSizeChange,"show-sizer":"","show-total":"","show-elevator":"",style:{margin:"10px"}},null,8,["total","page-size","onOnNext","onOnPrev","onOnChange","onOnPageSizeChange"]),[[x,a.total>10]])])):(m(),V("div",$,[r(U)]))}const Q=C(G,[["render",K]]);export{Q as default};
//# sourceMappingURL=User-pZISwZlQ.js.map
